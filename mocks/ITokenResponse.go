// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// ITokenResponse is an autogenerated mock type for the ITokenResponse type
type ITokenResponse struct {
	mock.Mock
}

// GetAccessToken provides a mock function with given fields:
func (_m *ITokenResponse) GetAccessToken() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAccessToken")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCreatedAt provides a mock function with given fields:
func (_m *ITokenResponse) GetCreatedAt() time.Time {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetCreatedAt")
	}

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// GetExpiresAt provides a mock function with given fields:
func (_m *ITokenResponse) GetExpiresAt() time.Time {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetExpiresAt")
	}

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}

// GetRefreshToken provides a mock function with given fields:
func (_m *ITokenResponse) GetRefreshToken() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetRefreshToken")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetScope provides a mock function with given fields:
func (_m *ITokenResponse) GetScope() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetScope")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetTokenType provides a mock function with given fields:
func (_m *ITokenResponse) GetTokenType() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetTokenType")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewITokenResponse creates a new instance of ITokenResponse. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewITokenResponse(t interface {
	mock.TestingT
	Cleanup(func())
}) *ITokenResponse {
	mock := &ITokenResponse{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
